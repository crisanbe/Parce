plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id ("com.google.protobuf") version ("0.8.17")
}

android {
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        multiDexEnabled = true
        applicationId ProjectConfig.appId
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk
        versionCode ProjectConfig.versionCode
        versionName ProjectConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Compose.composeCompilerVersion
    }
}

dependencies {
    implementation(project(Modules.auth))
    implementation(project(Modules.shared))
    implementation(project(Modules.core))
    implementation(project(Modules.components_ui))

    implementation(AndroidX.datastore_core)
    implementation(AndroidX.datastore_preferences)
    implementation "com.google.accompanist:accompanist-flowlayout:0.25.1"
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "com.jakewharton.timber:timber:5.0.1"

    implementation(Compose.ui)
    implementation(Compose.uiToolingPreview)
    implementation(Compose.hiltNavigationCompose)
    implementation(Compose.material)
    implementation(Compose.runtime)
    implementation(Compose.navigation)
    implementation(Compose.viewModelCompose)
    implementation(Compose.activityCompose)
    implementation(Compose.uiTooling)
    implementation(Compose.runtime_livedata)

    implementation(DaggerHilt.hiltAndroid)
    implementation(DaggerHilt.hiltCompilerNavigation)
    implementation 'androidx.preference:preference-ktx:1.2.0'
    kapt(DaggerHilt.hiltCompiler)
    kapt(DaggerHilt.hiltCompilerAndroidx)

    implementation(Room.room_ktx)
    implementation(Room.room_runtime)
    kapt(Room.room_compiler)

    implementation(AndroidX.coreKtx)
    implementation(AndroidX.appCompat)
    implementation(AndroidX.runtimeKtx)

    implementation(Coil.coilCompose)
    implementation(Coil.coilAccompanist)

    implementation(Retrofit.okHttp)
    implementation(Retrofit.retrofit)
    implementation(Retrofit.okHttpLoggingInterceptor)
    implementation(Retrofit.moshiConverter)

    implementation(Coroutines.coroutines)
    implementation(Coroutines.coroutinesAndroid)

    implementation(ViewModelLiveData.lifecycleKtx)
    implementation(ViewModelLiveData.livedataKtx)
    implementation(ViewModelLiveData.livedataViewModel)
    implementation(ViewModelLiveData.androidxActivity)

    implementation(Gson.gson)
    implementation(Material.material)
    implementation(Material.materialGoogle)

    implementation(Accompanist.accompanistIndicators)
    implementation(Accompanist.accompanistPager)
    implementation(Accompanist.accompanistPermission)
    implementation(Accompanist.accompanistSystemUiController)
    implementation(Accompanist.accompanistNavigationAnimation)
    implementation(Accompanist.navigationCompose)

    testImplementation(Testing.junit4)
    testImplementation(Testing.junitAndroidExt)
    testImplementation(Testing.truth)
    testImplementation(Testing.coroutines)
    testImplementation(Testing.turbine)
    testImplementation(Testing.composeUiTest)
    testImplementation(Testing.mockk)
    testImplementation(Testing.mockWebServer)

    androidTestImplementation(Testing.junit4)
    androidTestImplementation(Testing.junitAndroidExt)
    androidTestImplementation(Testing.truth)
    androidTestImplementation(Testing.coroutines)
    androidTestImplementation(Testing.turbine)
    androidTestImplementation(Testing.composeUiTest)
    androidTestImplementation(Testing.mockkAndroid)
    androidTestImplementation(Testing.mockWebServer)
    androidTestImplementation(Testing.hiltTesting)
    kaptAndroidTest(DaggerHilt.hiltCompiler)
    androidTestImplementation(Testing.testRunner)

}
protobuf {
    protoc {
        if (osdetector.os == "osx") {
            artifact = ("com.google.protobuf:protoc:3.14.0:osx-x86_64")
        } else {
            artifact = ("com.google.protobuf:protoc:3.14.0")
        }
    }
    generateProtoTasks {
        all().forEach {
            it.builtins {
                create("java") {
                    option("lite")
                }
            }
        }
    }
}